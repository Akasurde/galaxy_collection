---
- name: Sync Automation Hub repository
  ah_repository_sync:
    name:           "{{ __repository_item.name }}"
    wait:           "{{ __repository_item.wait | default(false)  }}"
    interval:       "{{ __repository_item.interval | default(1) }}"
    timeout:        "{{ __repository_item.timeout | default(omit) }}"
    ah_host:        "{{ ah_host | default(ah_hostname) }}"
    ah_username:    "{{ ah_username | default(omit) }}"
    ah_password:    "{{ ah_password | default(omit) }}"
    ah_path_prefix: "{{ ah_path_prefix | default(omit) }}"
    ah_verify_ssl:  "{{ ah_validate_certs | default(omit) }}"
  when: _ah_repositories != []
  loop: "{{ _ah_repositories }}"
  loop_control:
    loop_var: "__repository_item"
  no_log: "{{ ah_configuration_repository_secure_logging }}"
  vars:
    ansible_async_dir: '/tmp/.ansible_async'
    _ah_repositories:
      - "{{ ah_repository_certified | combine({'name': 'rh-certified'}) }}"
      - "{{ ah_repository_community | combine({'name': 'community'}) }}"

# - name: Sync Automation Hub repository
#   ah_repository_sync:
#     name:           "{{ __repository_item.name }}"
#     wait:           "{{ __repository_item.wait | default(omit)  }}"
#     interval:       "{{ __repository_item.interval | default(1) }}"
#     timeout:        "{{ __repository_item.timeout | default(omit) }}"
#     ah_host:        "{{ ah_host | default(ah_hostname) }}"
#     ah_username:    "{{ ah_username | default(omit) }}"
#     ah_password:    "{{ ah_password | default(omit) }}"
#     ah_path_prefix: "{{ ah_path_prefix | default(omit) }}"
# #    validate_certs: "{{ ah_validate_certs | default(omit) }}"
#     ah_verify_ssl:  "{{ ah_validate_certs | default(omit) }}"
#   when: _ah_repositories != []
#   loop: "{{ _ah_repositories }}"
#   loop_control:
#     loop_var: "__repository_item"
#   no_log: "{{ ah_configuration_repository_secure_logging }}"
#   async: 1000
#   poll: 0
#   register: __repositories_syncs_job_async
#   changed_when: not __repositories_syncs_job_async.changed
#   vars:
#     ansible_async_dir: '/tmp/.ansible_async'
#     _ah_repositories: "{{ _certified + _community }}"
#     _community: "{{ lookup('template', 'community.j2') }}"
#     _certified: "{{ lookup('template', 'certified.j2') }}"

# - name: "Repository Sync | Wait for finish the repository_sync to finish"
#   async_status:
#     jid: "{{ __repositories_syncs_job_async_result_item.ansible_job_id }}"
#   register: __repositories_syncs_job_async_result
#   until: __repositories_syncs_job_async_result.finished
#   retries: "{{ ah_configuration_repository_syncs_async_retries }}"
#   delay: "{{ ah_configuration_repository_syncs_async_delay }}"
#   loop: "{{ __repositories_syncs_job_async.results }}"
#   loop_control:
#     loop_var: __repositories_syncs_job_async_result_item
#   when: __repositories_syncs_job_async_result_item.ansible_job_id is defined
#   no_log: "{{ ah_configuration_repository_secure_logging }}"
#   vars:
#     ansible_async_dir: '/tmp/.ansible_async'
...
